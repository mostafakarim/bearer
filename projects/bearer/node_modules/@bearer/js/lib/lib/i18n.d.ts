export declare const LOCALE_CHANGED = "bearer-locale-changed";
export declare class I18n {
    private _locale;
    private _dictionnary;
    /**
     * load a dictionary (key/value) containing all the translations required by a dictionary
     * @argument {string} integration the identifier of the Integration you want to connect to ex: 12345-attach-github-pull-request
     * @argument {(Object | Promise<Object>)} dictionary dictionary containing all key/value pairs of the integration
     * @argument {{locale: string}} options { locale: 'en'}
     */
    load: (integrationName: string | null, dictionnary: IntegrationTranlsationEntry | TransLationObject | Promise<IntegrationTranlsationEntry | TransLationObject>, { locale }?: Partial<{
        locale: string;
    }>) => Promise<void>;
    private localeChanged;
    get: (integrationName: string | null, key: string, options?: Partial<{
        locale: string;
    }>) => TransLationValue;
    /**
     * set the current locale you want your integrations to use
     */
    locale: string;
}
declare const i18n: I18n;
declare type IntegrationTranlsationEntry = {
    [integrationName: string]: TransLationObject;
};
declare type TransLationValue = string | number | TransLationObject;
interface TransLationObject {
    [key: string]: TransLationValue;
}
export default i18n;
